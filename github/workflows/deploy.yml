name: Build and Deploy Backend Fastapi

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Build & Deploy - fastapi backend
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout source code
      - name: Checkout
        uses: actions/checkout@v3

      # Step 2: Get current date
      - name: Get current date
        id: datetime
        run: echo "date=$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"

      # Step 3: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ vars.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      # Step 4: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 5: Create .env file for backend dev
      - name: Create .env file
        run: |
          echo "${{ vars.DEV_ENV }}" > ./.env

      # Step 8: Build and Push Docker Image to ECR
      - name: Build & Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: |
            ${{ vars.ECR_REPO }}:${{ steps.datetime.outputs.date }}
            ${{ vars.ECR_REPO }}:latest

      # Step 10: Notify Telegram of the deployment status
      - name: Notify Telegram
        if: always()
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          STATUS: ${{ job.status }}
        run: |
          if [ "$STATUS" = "success" ]; then
            ICON="‚úÖ"
            COLOR="*Success*"
          elif [ "$STATUS" = "failure" ]; then
            ICON="‚ùå"
            COLOR="*Failure*"
          else
            ICON="‚ö†Ô∏è"
            COLOR="*Cancelled*"
          fi

          MESSAGE="${ICON} *GitHub Action Notification*\n\
          üß± Repo: [${{ github.repository }}](https://github.com/${{ github.repository }})\n\
          üåø Branch: \`${{ github.ref_name }}\`\n\
          üë§ Author: *${{ github.actor }}*\n\
          üí¨ Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})\n\
          üß∞ Workflow: *${{ github.workflow }}* ‚Üí *${{ github.job }}*\n\
          üìä Status: ${COLOR}\n\
          üîó [View Run Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"

          curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
            -d chat_id="${CHAT_ID}" \
            -d parse_mode="Markdown" \
            -d text="$MESSAGE"
